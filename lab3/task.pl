% 1 Определите отношение trim(L1,L2), которое удаляет в списке L1 первый и последний элемент.
trim([_ | Tail], L2) :- 
    append(Init, [_], Tail),
    L2 = Init.

% 2 Определите отношение first_last(L1,L2), которое выполнено, если список L1 совпадает
% со списком L2, но в L2 первый и последний элемент поменялись местами.

first_last(L1,L2) :-
    append([H|TH], [T], L1),
    append([T|TH], [H], L2).

% Определите процедуру total/2, которая подсчитывает произведение элементов списка целых чисел.
total([], 1).
total([H|T], N) :-
    total(T, N1),
    N is H * N1.

% Определите процедуру place/3, которая первый свой аргумент помещает во второй аргумент,
% являющийся списком, таким образом, что первый аргумент последовательно занимает место между элементами второго  аргумента.
place(X, L, [X|L]).
place(X, [H|T], [H|T1]) :-
    place(X, T, T1).

% Напишите процедуру double(L,LL), в которой   каждый элемент списка L удваивается в списке LL.
double([], []).
double([H|T], [H,H|TT]) :-
    double(T, TT).


% Определите процедуру split(L1,L2,L3), которая разбивает список целых чисел L1 на два списка: четных чисел L2 и нечетных - L3.
% Порядок элементов в двух новых списках должен быть обратный, как показано в примере.
split([], [], []).
split([H|T], L2, L3) :-
    H mod 2 =:= 0,
    split(T, LT2, L3),
    append(LT2, [H], L2).
split([H|T], L2, L3) :-
    H mod 2 =\= 0, % Если H нечетное,
    split(T, L2, LT3), % Рекурсивно разбиваем остальной список,
    append(LT3, [H], L3). % и добавляем H в конец списка нечетных после возвращения из рекурсии.

% Определите отношение repeat3(L1,L2) c аргументами - списками. В списке L2 первый и последний элемент списка L1 меняются местами
% и  повторяются три раза.
repeat_back3([First|T], L2):-
    append(Middle, [Last], T),
    append([Last, Last, Last], Middle, MiddleResult),
    append(MiddleResult, [First,First,First], L2).

% Определите процедуру combi(L1,L2,L3), которая помещает элементы   второго списка между элементами первого.
combi([],[],[]).
combi([],L2,L2).
combi(L1,[],L1).
combi([H1|T1], [H2|T2], [H1,H2|T3]) :-
    combi(T1, T2, T3).

